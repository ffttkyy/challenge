# -*- coding: utf-8 -*-
"""of Proyek Analisis Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1f2171LrPjKbHik6c2ArGv3W4l-mp98st

# Proyek Analisis Data: [Input Nama Dataset]
- **Nama:** Rizky w
- **Email:** ticctocc28@gmail.com
- **ID Dicoding:** [Input Username]

## Menentukan Pertanyaan Bisnis

- **Bagaimana pengaruh faktor cuaca terhadap jumlah penyewaan sepeda per hari?**

  - **Tujuan**: Memahami bagaimana kondisi cuaca tertentu (seperti clear, mist, atau light snow/rain) memengaruhi tingkat penyewaan sepeda.

- **Apakah terdapat pola musiman yang signifikan dalam jumlah penyewaan sepeda, dan bagaimana pola ini dapat memengaruhi strategi pengelolaan sistem?**

 - **Tujuan**: Mengidentifikasi fluktuasi penyewaan sepeda berdasarkan musim (spring, summer, fall, winter).

## Import Semua Packages/Library yang Digunakan
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st
# """## Data Wrangling

# ### Gathering Data
# """

hour_data = pd.read_csv('data/hour.csv')
day_data = pd.read_csv('data/day.csv')

# """**Insight:**
# - Dataset berhasil dimuat.

# ## Assessing Data

# ###menilai data day_data
# """

# day_data.head()

# day_data.info()

# day_data.isna().sum()

# day_data.duplicated().sum()

# day_data.describe()

# """###Menilai data hour_data"""

# hour_data.head()

# hour_data.info()

# hour_data.isna().sum()

# hour_data.duplicated().sum()

# hour_data.describe()

# """**Insight:**
# - Struktur data telah dipahami.
# - Tidak ditemukan nilai yang hilang.

# ## Cleaning Data

# ###Membersihkan data day_data
# """

# # Check for duplicates
# duplicates = day_data.duplicated().sum()
# print(f"Jumlah data duplikat: {duplicates}")

# # If duplicates exist, drop them
# if duplicates > 0:
#     daily_data = day_data.drop_duplicates()

# """###membersihkan data hour_data"""

# # Check for duplicates
# duplicates = hour_data.duplicated().sum()
# print(f"Jumlah data duplikat: {duplicates}")

# # If duplicates exist, drop them
# if duplicates > 0:
#     daily_data = hour_data.drop_duplicates()

# """**Insight:**
# - Tidak ditemukan data duplikat atau data sudah dibersihkan.

# ## Exploratory Data Analysis (EDA)

# ###Menggabungkan Data Harian dan Data Jam
# """

# # Gabungkan dataset harian dan jam
# merged_data = pd.merge(hour_data, day_data, how='inner', on=['dteday', 'season', 'weathersit', 'holiday', 'workingday'])

# # Menampilkan informasi struktur data gabungan
# print(merged_data.info())

# """**Insight:**
# - Dataset gabungan memberikan detail lebih granular untuk analisis.

# ###Jumlah Penyewaan Berdasarkan Kondisi Cuaca
# """

# # Total penyewaan berdasarkan kondisi cuaca
# weather_rentals = merged_data.groupby('weathersit')['cnt_x'].sum().sort_values(ascending=False)

# print(weather_rentals)

# # Visualisasi
# plt.figure(figsize=(8, 6))
# sns.barplot(x=weather_rentals.index, y=weather_rentals.values, palette='viridis')
# plt.title("Total Rentals by Weather Situation")
# plt.xlabel("Weather Situation (1: Clear, 2: Mist, 3: Light Snow/Rain)")
# plt.ylabel("Total Rentals")
# plt.show()

# """**Insight:**
# - Sebagian besar penyewaan terjadi pada cuaca cerah.

# ###Jumlah Penyewaan Berdasarkan Musim
# """

# # Total penyewaan berdasarkan musim
# season_rentals = merged_data.groupby('season')['cnt_x'].sum().sort_values(ascending=False)

# print(season_rentals)

# # Visualisasi
# plt.figure(figsize=(8, 6))
# sns.barplot(x=season_rentals.index, y=season_rentals.values, palette='coolwarm')
# plt.title("Total Rentals by Season")
# plt.xlabel("Season (1: Spring, 2: Summer, 3: Fall, 4: Winter)")
# plt.ylabel("Total Rentals")
# plt.show()

# """Insight:

# - Musim panas dan musim gugur menunjukkan jumlah penyewaan tertinggi.

# ###Penyewaan Berdasarkan Status Hari Libur
# """

# # Distribusi penyewaan berdasarkan hari libur
# holiday_rentals = merged_data.groupby('holiday')['cnt_x'].sum()

# print(holiday_rentals)

# # Visualisasi
# plt.figure(figsize=(8, 6))
# sns.barplot(x=['Working Day', 'Holiday'], y=holiday_rentals.values, palette='pastel')
# plt.title("Total Rentals by Holiday Status")
# plt.xlabel("Holiday Status")
# plt.ylabel("Total Rentals")
# plt.show()

# """**Insight:**
# - Sebagian besar penyewaan terjadi pada hari kerja, menunjukkan bahwa sepeda mungkin digunakan untuk kebutuhan transportasi rutin.

# ###Distribusi Penyewaan Berdasarkan Waktu
# """

# # Distribusi penyewaan per jam
# hourly_rentals = hour_data.groupby('hr')['cnt'].mean()

# # Visualisasi
# plt.figure(figsize=(12, 6))
# sns.lineplot(x=hourly_rentals.index, y=hourly_rentals.values, marker='o')
# plt.title("Average Rentals per Hour")
# plt.xlabel("Hour of the Day")
# plt.ylabel("Average Rentals")
# plt.grid()
# plt.show()

# """**Insight:**
# - Penyewaan memuncak di pagi hari dan sore hari, mendukung hipotesis bahwa sepeda digunakan untuk perjalanan kerja.

# ## Visualization & Explanatory Analysis

# ###Analisis Pertanyaan 1: Pengaruh Faktor Cuaca terhadap Penyewaan Sepeda
# """

# # Boxplot for weather impact on bike rentals
# plt.figure(figsize=(10, 6))
# sns.boxplot(data=day_data, x='weathersit', y='cnt', palette='Set2')
# plt.title("Impact of Weather on Daily Bike Rentals")
# plt.xlabel("Weather Situation (1: Clear, 2: Mist, 3: Light Snow/Rain)")
# plt.ylabel("Total Daily Rentals")
# plt.show()

# """**Insight:**
# - Penyewaan sepeda tertinggi terjadi saat cuaca cerah.
# - Penyewaan menurun saat cuaca memburuk.
# """

# # Boxplot for seasonal patterns in bike rentals
# plt.figure(figsize=(10, 6))
# sns.boxplot(data=day_data, x='season', y='cnt', palette='coolwarm')
# plt.title("Seasonal Patterns in Daily Bike Rentals")
# plt.xlabel("Season (1: Spring, 2: Summer, 3: Fall, 4: Winter)")
# plt.ylabel("Total Daily Rentals")
# plt.show()

# """**Insight:**
# - Grafik menunjukkan pola musiman yang jelas, dengan permintaan tertinggi pada musim panas dan gugur.

# ## Analisis Lanjutan (Opsional)
# """

# plt.figure(figsize=(8, 6))
# # Select only numerical features for correlation calculation
# numerical_data = day_data.select_dtypes(include=['number'])
# sns.heatmap(numerical_data.corr(), annot=True, cmap='coolwarm', fmt='.2f')
# plt.title("Correlation Matrix")
# plt.show()

# """## Conclusion

# - Conclusion dari Pertanyaan 1

# Cuaca memiliki pengaruh signifikan terhadap jumlah penyewaan sepeda. Operator dapat mempersiapkan lebih banyak sepeda saat cuaca cerah dan meminimalkan biaya operasional saat cuaca buruk.

# - Conclusion dari Pertanyaan 2

# Penyewaan sepeda bervariasi menurut musim, dengan permintaan tertinggi di musim panas dan musim gugur. Hal ini menunjukkan pentingnya strategi pemasaran musiman dan pengelolaan stok sepeda.
# """


# Streamlit Dashboard
st.title("Dashboard Analisis Penyewaan Sepeda")

# Sidebar
st.sidebar.header("Filter Data")
season = st.sidebar.multiselect(
    "Pilih Musim:", options=day_data['season'].unique(),
    default=day_data['season'].unique()
)

weather = st.sidebar.multiselect(
    "Pilih Kondisi Cuaca:", options=day_data['weathersit'].unique(),
    default=day_data['weathersit'].unique()
)

# Filter data berdasarkan input
filtered_data = day_data[
    (day_data['season'].isin(season)) &
    (day_data['weathersit'].isin(weather))
]

# Visualization 1: Pengaruh cuaca
st.subheader("Pengaruh Cuaca terhadap Penyewaan")
fig_weather = plt.figure(figsize=(10, 6))
sns.boxplot(data=filtered_data, x='weathersit', y='cnt', palette='Set2')
plt.title("Impact of Weather on Daily Bike Rentals")
st.pyplot(fig_weather)

# Visualization 2: Pola musiman
st.subheader("Pola Musiman dalam Penyewaan")
fig_season = plt.figure(figsize=(10, 6))
sns.boxplot(data=filtered_data, x='season', y='cnt', palette='coolwarm')
plt.title("Seasonal Patterns in Daily Bike Rentals")
st.pyplot(fig_season)

st.write("Dashboard ini menampilkan hasil analisis penyewaan sepeda berdasarkan cuaca dan musim.")
